jobs:
  build:
    name: Build
    uses: ./.github/workflows/bazel.yml
    with:
      cache-key: rust-build
      name: Build
      run: bazel build //rust:selenium-manager
  linux-debug:
    if: github.event_name != 'schedule'
    name: Linux Debug
    needs: tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - continue-on-error: true
      name: Update Rust
      run: 'rustup update

        rustc -vV

        '
    - continue-on-error: true
      name: Install cross
      run: 'cargo install cross --git https://github.com/cross-rs/cross

        '
    - continue-on-error: true
      name: Build release binary
      run: 'cross build --target x86_64-unknown-linux-musl --profile dev

        cd target/x86_64-unknown-linux-musl/debug

        tar -cvf ../../../../selenium-manager-linux-debug.tar selenium-manager

        '
      working-directory: rust
    - continue-on-error: true
      name: Upload release binary
      uses: actions/upload-artifact@v4
      with:
        name: selenium-manager-linux-debug
        path: selenium-manager-linux-debug.tar
        retention-days: 6
  linux-stable:
    if: github.event_name != 'schedule'
    name: Linux Stable
    needs: tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - continue-on-error: true
      name: Update Rust
      run: 'rustup update

        rustc -vV

        '
    - continue-on-error: true
      name: Install cross
      run: 'cargo install cross --git https://github.com/cross-rs/cross

        '
    - continue-on-error: true
      name: Build release binary
      run: cross build --target x86_64-unknown-linux-musl --release
      working-directory: rust
    - continue-on-error: true
      name: Rename binary
      run: mv rust/target/x86_64-unknown-linux-musl/release/selenium-manager selenium-manager-linux
    - continue-on-error: true
      name: Upload release binary
      uses: actions/upload-artifact@v4
      with:
        name: selenium-manager-linux
        path: selenium-manager-linux
        retention-days: 6
  macos-debug:
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static
    if: github.event_name != 'schedule'
    name: MacOS Debug
    needs: tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - continue-on-error: true
      name: Update Rust
      run: 'rustup update

        rustup target add aarch64-apple-darwin

        rustc -vV

        '
    - continue-on-error: true
      name: Build release binary
      run: "cargo build --target x86_64-apple-darwin --profile dev\ncargo build --target\
        \ aarch64-apple-darwin --profile dev\nlipo -create -output target/selenium-manager\
        \ \\\n  target/aarch64-apple-darwin/debug/selenium-manager \\\n  target/x86_64-apple-darwin/debug/selenium-manager\n\
        cd target\ntar -cvf ../../selenium-manager-macos-debug.tar selenium-manager\n"
      working-directory: rust
    - continue-on-error: true
      name: Upload release binary
      uses: actions/upload-artifact@v4
      with:
        name: selenium-manager-macos-debug
        path: selenium-manager-macos-debug.tar
        retention-days: 6
  macos-stable:
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static
    if: github.event_name != 'schedule'
    name: MacOS Stable
    needs: tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - continue-on-error: true
      name: Update Rust
      run: 'rustup update

        rustup target add aarch64-apple-darwin

        rustc -vV

        '
    - continue-on-error: true
      name: Build release binary
      run: "cargo build --target x86_64-apple-darwin --release\ncargo build --target\
        \ aarch64-apple-darwin --release\nlipo -create -output target/selenium-manager-macos\
        \ \\\n  target/aarch64-apple-darwin/release/selenium-manager \\\n  target/x86_64-apple-darwin/release/selenium-manager\n"
      working-directory: rust
    - continue-on-error: true
      name: Upload release binary
      uses: actions/upload-artifact@v4
      with:
        name: selenium-manager-macos
        path: rust/target/selenium-manager-macos
        retention-days: 6
  release:
    if: github.event_name != 'schedule' && github.repository_owner == 'seleniumhq'
      && (github.ref == 'refs/heads/trunk' || inputs.release == 'true')
    name: Release Binaries
    needs:
    - macos-stable
    - linux-stable
    - windows-stable
    - macos-debug
    - linux-debug
    - windows-debug
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout selenium_manager_artifacts
      uses: actions/checkout@v4
      with:
        repository: SeleniumHQ/selenium_manager_artifacts
        token: ${{ secrets.SELENIUM_CI_TOKEN }}
    - continue-on-error: true
      name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - continue-on-error: true
      name: Prepare and Commit
      run: 'linux_sha=$(shasum -a 256 artifacts/selenium-manager-linux/selenium-manager-linux
        | awk ''{print $1}'')

        macos_sha=$(shasum -a 256 artifacts/selenium-manager-macos/selenium-manager-macos
        | awk ''{print $1}'')

        windows_sha=$(shasum -a 256 artifacts/selenium-manager-windows/selenium-manager-windows.exe
        | awk ''{print $1}'')

        echo "{\"macos\": \"$macos_sha\", \"windows\": \"$windows_sha\", \"linux\":
        \"$linux_sha\"}" > latest.json

        git config --local user.email "selenium-ci@users.noreply.github.com"

        git config --local user.name "Selenium CI Bot"

        git add latest.json

        git commit -m "Update hash values for latest binaries"

        short_hash=$(git rev-parse --short HEAD)

        echo "TAG_NAME=selenium-manager-$short_hash" >> $GITHUB_ENV

        git tag ${{ env.TAG_NAME }}

        git push && git push --tags

        '
    - continue-on-error: true
      name: Release
      uses: softprops/action-gh-release@v2
      with:
        draft: false
        files: 'artifacts/selenium-manager-linux/selenium-manager-linux

          artifacts/selenium-manager-macos/selenium-manager-macos

          artifacts/selenium-manager-windows/selenium-manager-windows.exe

          artifacts/selenium-manager-linux-debug/selenium-manager-linux-debug.tar

          artifacts/selenium-manager-macos-debug/selenium-manager-macos-debug.tar

          artifacts/selenium-manager-windows-debug/selenium-manager-windows-debug.exe

          '
        prerelease: false
        repository: SeleniumHQ/selenium_manager_artifacts
        tag_name: ${{ env.TAG_NAME }}
        token: ${{ secrets.SELENIUM_CI_TOKEN }}
  tests:
    name: Tests
    needs: build
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos
        - os: ubuntu
        - os: windows
    uses: ./.github/workflows/bazel.yml
    with:
      cache-key: rust-test
      name: Tests (${{ matrix.os }})
      os: ${{ matrix.os }}
      run: bazel test --test_env=RUST_BACKTRACE=full --test_env=RUST_TEST_NOCAPTURE=1
        --flaky_test_attempts=3 //rust/...
  windows-debug:
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static
    if: github.event_name != 'schedule'
    name: Windows Debug
    needs: tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - continue-on-error: true
      name: Update Rust
      run: 'rustup update

        rustup toolchain install stable-i686-pc-windows-msvc

        rustup default stable-i686-pc-windows-msvc

        rustc -vV

        '
    - continue-on-error: true
      name: Build release binary
      run: cargo build --profile dev
      working-directory: rust
    - continue-on-error: true
      name: Rename binary
      run: mv rust/target/debug/selenium-manager.exe selenium-manager-windows-debug.exe
    - continue-on-error: true
      name: Upload release binary
      uses: actions/upload-artifact@v4
      with:
        name: selenium-manager-windows-debug
        path: selenium-manager-windows-debug.exe
        retention-days: 6
  windows-stable:
    env:
      RUSTFLAGS: -Ctarget-feature=+crt-static
    if: github.event_name != 'schedule'
    name: Windows Stable
    needs: tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout project
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
    - continue-on-error: true
      name: Update Rust
      run: 'rustup update

        rustup toolchain install stable-i686-pc-windows-msvc

        rustup default stable-i686-pc-windows-msvc

        rustc -vV

        '
    - continue-on-error: true
      name: Build release binary
      run: cargo build --release
      working-directory: rust
    - continue-on-error: true
      name: Rename binary
      run: mv rust/target/release/selenium-manager.exe selenium-manager-windows.exe
    - continue-on-error: true
      name: Upload release binary
      uses: actions/upload-artifact@v4
      with:
        name: selenium-manager-windows
        path: selenium-manager-windows.exe
        retention-days: 6
name: CI - Rust
on:
  repository_dispatch:
    types: trigger-ga___ci-rust.yml
