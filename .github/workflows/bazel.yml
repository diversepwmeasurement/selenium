jobs:
  bazel:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SEL_M2_PASS: ${{ secrets.SEL_M2_PASS }}
      SEL_M2_USER: ${{ secrets.SEL_M2_USER }}
      SE_AVOID_STATS: true
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
    name: ${{ inputs.name }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout source tree
      uses: actions/checkout@v4
    - continue-on-error: true
      if: inputs.os != 'windows'
      name: Free space
      run: ./scripts/github-actions/free-disk-space.sh
    - continue-on-error: true
      if: inputs.os == 'windows'
      name: Remove driver directories Windows
      run: 'rm "$env:ChromeWebDriver" -r -v

        rm "$env:EdgeWebDriver" -r -v

        rm "$env:GeckoWebDriver" -r -v

        '
    - continue-on-error: true
      if: inputs.os != 'windows'
      name: Remove driver directories Non-Windows
      run: 'sudo rm -rf "$CHROMEWEBDRIVER" "$EDGEWEBDRIVER" "$GECKOWEBDRIVER"

        '
    - continue-on-error: true
      if: inputs.ruby-version != ''
      name: Set Ruby version
      run: echo '${{ inputs.ruby-version }}' > rb/.ruby-version
    - continue-on-error: true
      if: inputs.dotnet-version != ''
      name: Setup DotNet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
    - continue-on-error: true
      if: inputs.java-version != ''
      name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ inputs.java-version }}
    - continue-on-error: true
      if: inputs.node-version != ''
      name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
    - continue-on-error: true
      if: inputs.caching
      name: Setup Bazel with caching
      uses: bazel-contrib/setup-bazel@0.8.5
      with:
        bazelisk-cache: true
        bazelrc: common --color=yes
        cache-version: 2
        disk-cache: ${{ inputs.cache-key }}
        external-cache: "name: ${{ inputs.cache-key }}\nmanifest:\n  crates: rust/Cargo.Bazel.lock\n\
          \  rules_ruby~~ruby~ruby: ${{ inputs.os == 'windows' && 'false' || 'rb/.ruby-version'\
          \ }}\n"
        repository-cache: true
    - continue-on-error: true
      if: inputs.caching == false
      name: Setup Bazel without caching
      uses: bazel-contrib/setup-bazel@0.8.5
      with:
        bazelrc: common --color=yes
    - continue-on-error: true
      if: inputs.os == 'ubuntu' && inputs.browser != ''
      name: Setup Fluxbox and Xvfb
      run: 'sudo apt-get -y install fluxbox

        Xvfb :99 &

        fluxbox -display :99 &

        echo "DISPLAY=:99" >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      if: inputs.os == 'windows' && inputs.browser != ''
      name: Set resolution
      run: Set-DisplayResolution -Width 1920 -Height 1080 -Force
    - continue-on-error: true
      if: inputs.browser == 'chrome'
      name: Setup Chrome
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: ${{ inputs.browser-version || 'stable' }}
    - continue-on-error: true
      if: inputs.browser == 'firefox'
      name: Setup Firefox
      uses: abhi1693/setup-browser@v0.3.5
      with:
        browser: firefox
        version: ${{ inputs.browser-version || 'latest' }}
    - continue-on-error: true
      if: inputs.browser == 'edge'
      name: Setup Edge
      uses: browser-actions/setup-edge@latest
      with:
        edge-version: ${{ inputs.browser-version || 'stable' }}
    - continue-on-error: true
      if: inputs.browser == 'safari'
      name: Setup Safari
      run: sudo safaridriver --enable
    - continue-on-error: true
      name: Run Bazel
      run: ${{ inputs.run }}
    - continue-on-error: true
      if: failure() && runner.debug == '1'
      name: Start SSH session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: false
    - continue-on-error: true
      if: inputs.nightly-release-files != ''
      name: Release Nightly
      uses: marvinpinto/action-automatic-releases@latest
      with:
        automatic_release_tag: nightly
        files: ${{ inputs.nightly-release-files }}
        prerelease: true
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        title: Nightly
    - continue-on-error: true
      if: ${{ always() && inputs.artifact-name != 'ignore-artifacts' }}
      name: Save changes
      run: 'git diff > changes.patch

        '
    - continue-on-error: true
      if: ${{ always() && inputs.artifact-name != 'ignore-artifacts' }}
      name: Upload changes
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: changes.patch
        retention-days: 6
name: Bazel
on:
  repository_dispatch:
    types: trigger-ga___bazel.yml
